@using NewsFeed.Models
@model System.Collections.Generic.IEnumerable<NewsFeed.Models.Tweet>

@foreach (var tweet in Model)
{
    if (tweet.Entity.Urls.Count > 0)
    {
        <div class="tweet" onclick="location.href = '@tweet.Entity.Urls.First().UrlString';" style="cursor: pointer;">
            <img src="@tweet.User.ProfileImageUrlHttps"> <strong>@tweet.User.Name:</strong> @tweet.Text
            <a href="@tweet.Entity.Urls.First().UrlString">@tweet.Entity.Urls.First().UrlString</a>
        </div>
        <img src="~/images/play.png" class="play" alt="Play" onclick="speak('@tweet.Text.Replace("\"", string.Empty).Replace("\'", string.Empty)')">
    }
    else
    {
        <div class="tweet">
            <img src="@tweet.User.ProfileImageUrlHttps"> <strong>@tweet.User.Name:</strong> @tweet.Text
        </div>
        <img src="~/images/play.png" class="play" alt="Play" onclick="speak('@tweet.Text.Replace("\"", string.Empty).Replace("\'", string.Empty)')">
    }
}

<script type="text/javascript">
    function speak(text) {
        var msg = new SpeechSynthesisUtterance(text);
        window.speechSynthesis.speak(msg);
    };
</script>